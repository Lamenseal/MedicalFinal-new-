

<div class="container-fluid" style=" margin: auto;border:1px solid black;height:800px">

    <!-- //input瀏覽檔案 -->
    <h4>Upload image:</h4>
    <form action="~/Admin/AdminProduct/test64"  method="post" enctype="multipart/form-data">
        <div  style="border:1px solid red;height:200px;width:200px;" >
            <img id="myPhoto1" src="#" alt="Alternate Text" height="200" width="200"/>
        </div>
        
        <input id="uploadImage" type="file" accept="image/*">
        <input type="text" name="str64" id="testP" multiple="multiple">
        
        <input type="submit" name="name" value="submit" />
    </form>

    <!-- // 拖曳放置檔案 -->
    <h4>Or drop image here:</h4>
    <div id="dragArea"></div>

    <!-- // 預覽檔案 -->
    <h4>Preview:</h4>
    <div id="previewDiv"></div>
</div>


@section Scripts
{


    <script>
        // 預覽圖片，將取得的files一個個取出丟到convertFile()
        function previewFiles(files) {
            if (files && files.length >= 1) {
                $.map(files, file => {
                    convertFile(file)
                        .then(data => {
                            console.log(data) // 把編碼後的字串輸出到console
                            showPreviewImage(data, file.name)
                        })
                        .catch(err => console.log(err))
                })
            }
        }

        // 使用FileReader讀取檔案，並且回傳Base64編碼後的source
        function convertFile(file) {
            return new Promise((resolve, reject) => {
                // 建立FileReader物件
                let reader = new FileReader()
                // 註冊onload事件，取得result則resolve (會是一個Base64字串)
                reader.onload = () => { resolve(reader.result) }
                // 註冊onerror事件，若發生error則reject
                reader.onerror = () => { reject(reader.error) }
                // 讀取檔案
                reader.readAsDataURL(file);
            })
        }

        // 在頁面上新增<img>
        function showPreviewImage(src, fileName) {
            let image = new Image(250) // 設定寬250px
            image.name = fileName
            image.src = src; // <img>中src屬性除了接url外也可以直接接Base64字串


            image.addEventListener("click", function () {
                $("#myPhoto1").attr("src",src)
                console.log(this);

                myUrl = $("#myPhoto1").attr("src");
                myUrl = myUrl.replace("data:image/jpeg;base64,", "");
                $("#testP").val(`${myUrl}`);
            })

            //var myUrl = src;
            //myUrl = myUrl.replace("data:image/jpeg;base64,", "");
            //$("#testP").val(`${myUrl}`);
            $("#previewDiv").append(image).append(`<span>${image.src}<span>`)
        }

        // 當上傳檔案改變時清除目前預覽圖，並且呼叫previewFiles()
        $("#uploadImage").change(function () {
            $("#previewDiv").empty() // 清空當下預覽
            previewFiles(this.files) // this即為<input>元素
        })

        //// dragover事件：拖曳(滑鼠還沒鬆開)至放置區時，就要先防止瀏覽器進行開圖
        //$("#dragArea").on("dragover", function (e) {
        //    e.preventDefault()
        //})

        //// 當拖曳區發生drop事件時，接受格式為image的資料
        //$("#dragArea").on("drop", function (e) {
        //    // 防止事件傳遞及預設事件發生
        //    e.stopPropagation()
        //    e.preventDefault()
        //    // 取得data type為image/*的資料
        //    e.originalEvent.dataTransfer.getData("image/*")
        //    let files = e.originalEvent.dataTransfer.files
        //    console.dir(files) // 看看File長什麼樣子
        //    $("#previewDiv").empty() // 清空當下預覽
        //    previewFiles(files)
        //})
    </script>
}