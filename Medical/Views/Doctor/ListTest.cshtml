@model IEnumerable<Medical.Models.Doctor>
@{
    ViewData["Title"] = "ListTest";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{
    <style>
        .listFCN {
            color: black !important;
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #00EEFF;
            font-family: Jost, sans-serif !important;
        }

        .listFCS {
            font-size: 18px;
            height: 18px;
            line-height: 18px;
            margin-bottom: 6px;
            overflow: hidden;
            color: black !important;
            font-family: Jost, sans-serif !important;
        }

        .listFCC {
            color: black !important;
            font-size: 18px;
            height: 54px;
            line-height: 18px;
            overflow: hidden;
            font-family: Jost, sans-serif !important;
        }

        .container img {
            width: 100%;
        }

        .body {
            font-size: 18px;
            font-family: "微軟正黑體";
            font-weight: bold;
        }

        .listFCP {
            font-size: 0px;
            line-height: 0px;
            margin-bottom: 10px;
        }

        .input-selector {
            outline: none;
            border: none;
        }

        .muti-selector {
            width: max-content;
            float: left;
            padding-right: 4px
        }

        .select-field {
            border: 1px solid black;
        }

        .select-field, .task, .list {
            width: 100%;
            background-color: white;
        }

        .list {
            box-shadow: 0px 30px 60px rgb(0,0,0,0.2);
            display: none;
            position: absolute;
            width: 214.16px;
            z-index: 10;
        }

        .down-arrow {
            font-size: 1.2rem;
            cursor: pointer;
            display: inline-block;
            transition: 0.2s linear;
        }

        .task {
            display: block;
            padding-left: 0;
        }

            .task span {
                float: right;
                font-size: 0.6rem;
                padding-top: 6px;
            }

                .task span:hover {
                    background-color: aliceblue;
                }

        .show {
            display: block;
        }

        .rotate180 {
            transform: rotate(180deg);
        }

        .detail {
            margin-left: 60px;
            margin-right: 60px;
            background-color: #4F518C !important;
            border-color: #4F518C !important;
            
        }

        .slideInUp {
            background-color: #FE938C;
            border: 0.2px #666;
            border-radius: 25px 25px 25px 25px;
            margin: 10px 5px 10px 5px;

        }

        #hateboot img {
            border-radius: 25px 25px 25px 25px !important;
            margin-top: 17px !important;
            position: relative;
        }

        .container .detail {
            color: white !important;
        }
        .container img{
            padding-top:10px !important;
        }
    </style>

}
<!-- Hero Start -->
<div class="container-fluid bg-primary py-5 hero-header mb-5">
    <div class="row py-3">
        <div class="col-12 text-center">
            <h3 class="display-3 text-white animated zoomIn">醫生清單</h3>
        </div>
    </div>
</div>
<!-- Hero End -->
<br>

@using (Html.BeginForm())
{
    <div>
        <input type="button" value="點我推薦醫生" onclick="location.href='@Url.ActionLink("SugDoc","Doctor")'" />
    </div>
    <div class="muti-selector">
        <div class="select-field">
            <input type="text" name="" placeholder="篩選專長" class="input-selector" />
            <span class="down-arrow">&blacktriangledown;</span>

        </div>
        <div class="list">
            <label for="" class="task">
                <input type="checkbox" class="checkAll1" name="123" id="c" onclick="check_all()"/>
                全選
            </label>
        </div>
    </div>
    <div class="muti-selector">
        <div class="select-field" id="select-field1">
            <input type="text" name="" placeholder="篩選醫生" class="input-selector" />
            <span class="down-arrow" id="down-arrow1">&blacktriangledown;</span>
        </div>
        <div class="list" id="list1">
            <label for="" class="task">
                <input type="checkbox" class="checkAll2" onclick="check_allDp()" id="d"/>
                全選
            </label>
        </div>
    </div>
    <input id="txtKeyword" hidden="hidden" type="text" name="txtKeyword" value="" />
    <input type="submit" id="sub" value="查詢" />
}
<div><br /></div>
<div class="webShow"></div>
@{ int count = 0;
    @*foreach (var item in Model)
        {
            count++;
            <div id="hateboot" class="col-lg-4 wow slideInUp" data-wow-delay="0.3s" style="float:left;width:20%;">
                <div class="team-item" style="padding: 0 9px 25px 9px;">
                    <div class="position-relative rounded-top  container listFCP" style="z-index: 1;">
                        <img id="img" class="img-fluid rounded-top w-100 dcimg" src="images/@Html.DisplayFor(modelItem => item.PicturePath)" style="width:204px;height:204px;">

                    </div>
                    <div class="container">
                        <div class="listFCN">@Html.DisplayFor(modelItem => item.DoctorName)</div>
                        <div class="listFCS">@Html.DisplayFor(modelItem => item.JobTitle)</div>
                        <div class="listFCC">學歷:@Html.DisplayFor(modelItem => item.Education)</div>
                        @Html.ActionLink("詳細資料", "Detail", new { id = item.DoctorId }, new { @class = "btn btn-outline-success detail" })
                    </div>
                </div>
            </div>
        }*@

} <footer style="clear:both"></footer>
@section Scripts{
    <script>
        const ck1 = document.querySelector('.checkAll1')
        const ck2 = document.querySelector('.checkAll2')
        function firstCheck() {
            document.getElementById("c").checked = true;
        }
        function firstCheck1() {
            document.getElementById("d").checked = true;            
        }

    @*醫生全選*@
        function check_allDp() {
            var ckboxs = document.getElementsByClassName("check1")
            for (var i = 0; i < ckboxs.length; i++) {
                ckboxs[i].checked = !ckboxs[i].checked;
                if (ckboxs[i].checked == true)
                    loadWebDoc(ckboxs[i].name)
                else
                    cancelWebDoc(ckboxs[i].name)
            }
        }

    @*專長全選*@
        function check_all() {
            
            var checkboxs = document.getElementsByClassName("check")
            
            for (var i = 0; i < checkboxs.length; i++) {

                checkboxs[i].checked = !checkboxs[i].checked;
                if (checkboxs[i].checked == true)
                    loadDoc(checkboxs[i].name);
                else
                    cancelDoc(checkboxs[i].name);
            }
        }

    @* 選單下拉 *@
        document.querySelector('.select-field').addEventListener('click', () => {
            document.querySelector('.list').classList.toggle('show');
            document.querySelector('.down-arrow').classList.toggle('rotate180')

        })
        document.querySelector('#select-field1').addEventListener('click', () => {
            document.querySelector('#list1').classList.toggle('show');
            document.querySelector('#down-arrow1').classList.toggle('rotate180')
        })


    @*網頁開始執行*@
        loadDep()     
        

    @*取消全選專長勾選*@
        async function cancelDoc(N) {
                depName = N;
                const trtDs = await fetch('@Url.Content("~/Admin/AdminDoctor/Doc")' + `?depName=${depName}`).then(response => response.json());
                trtDs.forEach((DoctorName) => {
                    document.querySelector(`#${DoctorName}`).remove();
                    document.getElementById(`${DoctorName}Div`).remove();
                })
        }

    @*取消全選醫生Ajax*@
        async function cancelWebDoc(N) {
            dcName = N;
            const doctors = await fetch('@Url.Content("~/doctor/GetDoctorWeb")' + `?docName=${dcName}`).then(response => response.json());
            doctors.forEach((DoctorName) => {
                var div = document.getElementById(`${doctors[0].doctorName}Div`);
                div.remove()
            })
        }

    @*取消勾選專長*@
        function CCC() {
            if ($(event.target)[0].checked == true) {
                loadDoc($(event.target)[0].name);
            }
            else
                cancelDoc($(event.target)[0].name);
        }

    @*取消勾選醫生*@
        function DDD() {
            if ($(event.target)[0].checked == true) {
                loadWebDoc($(event.target)[0].name);
            }
            else
                cancelWebDoc($(event.target)[0].name)
        }        


    @*讀取專長選單*@
        async function loadDep() {

            const deps = await fetch('@Url.Content("~/Admin/AdminDoctor/Dep")').then(response => response.json())
            deps.forEach((DeptName) => {                
                name =`<label for="" class="task">
                       <input type="checkbox" class="check" onclick="CCC()" id="${DeptName}" name="${DeptName}" value="${DeptName}"/>
                       ${DeptName}
                       </label>`;
                document.querySelector('.list').innerHTML += name;
            })
            firstCheck();
            check_all();
        }


    @*讀取Doctor選單*@
        async function loadDoc(N) {
                depName =N/*($(event.target)[0].name);*/
                const trtDs = await fetch('@Url.Content("~/Admin/AdminDoctor/Doc")' + `?depName=${depName}`).then(response => response.json());
                trtDs.forEach((DoctorName) => {
                    name = `<label for="" class="task" id="${DoctorName}">
                <input type="checkbox" class="check1" checked="true" name="${DoctorName}" onclick="DDD()" value="${DoctorName}"/>
                ${DoctorName}
            </label>`;
                    document.querySelector('#list1').innerHTML += name;
                    loadWebDoc(`${DoctorName}`)
                })
            firstCheck1()
        }

    @*讀取醫生資料Ajax*@
        async function loadWebDoc(dcname) {
            docName = dcname;
            const doctors = await fetch('@Url.Content("~/doctor/GetDoctorWeb")' + `?docName=${docName}`).then(response => response.json());

            doctors.forEach((DoctorName)=> {
                web = `<div id="${doctors[0].doctorName}Div" class="col-lg-4 wow slideInUp" data-wow-delay="0.3s" style="float:left;width:20%;">
            <div class="team-item" style="padding: 0 9px 25px 9px;">
                <div class="position-relative rounded-top  container listFCP" style="z-index: 1;">
                    <img id="img" class="img-fluid rounded-top w-100 dcimg" src="/images/${doctors[0].picturePath}" style="width:204px;height:204px;">

                </div>
                <div class="container">
                    <div class="listFCN">${doctors[0].doctorName}</div>
                   <div class="listFCS">${doctors[0].jobTitle}</div>
                    <div class="listFCC">學歷:${doctors[0].education}</div>
                    <button class = "btn btn-outline-success detail" >詳細資料<button/>
                </div>
            </div>
        </div>`;
                document.querySelector('.webShow').innerHTML += web;
            })
        }

    </script>
}


